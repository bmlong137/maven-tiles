import java.io.*;

File file = new File( basedir, "build.log" );
if ( !file.isFile() ) {
    throw new FileNotFoundException( "Could not find build log: " + file );
}

String content = new Scanner(file).useDelimiter("\\Z").next();

// check for pom->tile->parent inclusion
if (!content.contains("[INFO] Mixed 'com.test:civersion-tiletest:0.1.0-SNAPSHOT' with tile 'com.test:civersion-tiletest-tile1:1' as its new parent.")) {
  throw new Exception("Tile civersion-tiletest not injected");
}
if (!content.contains("[INFO] Mixed 'com.test:civersion-tiletest-tile1:1' with original parent 'com.test:civersion-tiletest-parent1:1' via parent1/pom.xml as its new top level parent.")) {
  throw new Exception("Tile civersion-tiletest-tile1 not injected");
}
if (!content.contains("<foo.bar.root>parent1|tile1</foo.bar.root>")) {
  throw new Exception("Tile parent1|tile1 not injected");
}

// check for pom->tile inclusion
if (!content.contains("[INFO] Mixed 'com.test:civersion-tiletest-noparent:0.1.0-SNAPSHOT' with tile 'com.test:civersion-tiletest-tile2:1' as its new parent.")) {
  throw new Exception("Tile civersion-tiletest-noparent not injected");
}
if (!content.contains("<foo.bar.noparent>tile2</foo.bar.noparent>")) {
  throw new Exception("Tile tile2 not injected");
}
if (!content.contains("Injecting 1 tiles as intermediary parent artifacts for com.test:civersion-tiletest-dynamic")) {
  throw new Exception("Tile civersion-tiletest-dynamic not injected");
}

// check for pom->parent->tile inclusion
if (!content.contains("[INFO] Mixed 'com.test:civersion-tiletest-parent2:1' with tile 'com.test:civersion-tiletest-tile2:1' as its new parent.")) {
  throw new Exception("Tile civersion-tiletest-parent2 not injected");
}

if (!content.contains("[INFO] Mixed 'com.test:civersion-tiletest-tile2:1' with original parent 'com.test:civersion-tiletest-parent1:1' via ../parent1/pom.xml as its new top level parent.")) {
  throw new Exception("Tile civersion-tiletest-tile2 not injected");
}
if (!content.contains("<foo.bar.twoparents>parent1|tile2</foo.bar.twoparents>")) {
  throw new Exception("Tile parent1|tile2 not injected");
}

// check for using a CI version in a parent

if (!content.contains("[INFO] Mixed 'com.test:civersion-tiletest-ciparent:0.1.0-SNAPSHOT' with tile 'com.test:civersion-tiletest-tile2:1' as its new parent.")) {
  throw new Exception("Tile civersion-tiletest-ciparent not injected");
}

if (!content.contains("[INFO] Mixed 'com.test:civersion-tiletest-tile2:1' with original parent 'com.test:civersion-tiletest-parent3:0.1.0-SNAPSHOT' via ../parent3/pom.xml as its new top level parent.")) {
  throw new Exception("Tile civersion-tiletest-tile2 not injected");
}
if (!content.contains("<foo.bar.ciparent>parent3|tile2</foo.bar.ciparent>")) {
  throw new Exception("Tile parent3 not injected");
}
